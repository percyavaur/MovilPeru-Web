{"version":3,"sources":["firebase/config.js","components/uploadImage/Upload.js","utils/sendPushNotification.js","App.js","serviceWorker.js","index.js"],"names":["window","location","hostname","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","pageLoaded","firestore","collection","onSnapshot","document","reload","storage","auth","UploadImage","state","imagen","_this","props","loading","beforeUploadImage","titulo","subtitulo","contenido","message","warning","uploadImageProfile","documentFile","setState","console","log","validateExtension","convertImageToBase64","error","test","name","reader","FileReader","onload","upload","dataUrl","target","result","image","Image","src","ImgBase64","resizeImage","resize","JPEG","uploadToStorageAndGetURL","readAsDataURL","folder","path","concat","uploadTask","ref","putString","put","isEmpty","on","child","getDownloadURL","then","url","onChange","_this2","this","react_default","a","createElement","style","textAlign","spin","spinning","size","tip","es_upload","action","showUploadList","listType","className","disabled","avatar","onClick","icon","divider","Component","SendPushNotification","somePushTokens","title","body","map","data","expoToken","fetch","JSON","stringify","to","sound","headers","Content-Type","method","mode","TextArea","Input","App","usersTokens","fetchCreateNews","_callee","_this$state","regenerator_default","wrap","_context","prev","next","Accept","response","json","fetchGetTokens","stop","_callee2","_context2","tokens","sendPushNotifications","_callee3","_this$state2","_context3","value","Object","defineProperty","_this$state3","es_form","onSubmit","handleSubmit","Item","input","prefix","type","color","placeholder","e","onChangeText","rows","Upload_UploadImage","es_button","htmlType","React","WrappedLogin","Form","create","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8dc7f743.chunk.js","sourcesContent":["import firebase from \"@firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst hostName = window.location.hostname;\r\nlet getServer;\r\nlet getVersion;\r\n\r\nconst productionConfig = {\r\n    //Your Production API Key here\r\n};\r\n\r\nconst devConfig = {\r\n    apiKey: \"AIzaSyDLieBYpSFU6fyL6EPz4hzEhevkOda27es\",\r\n    authDomain: \"movilperu.firebaseapp.com\",\r\n    databaseURL: \"https://movilperu.firebaseio.com\",\r\n    projectId: \"movilperu\",\r\n    storageBucket: \"movilperu.appspot.com\",\r\n    messagingSenderId: \"135498032188\",\r\n    appId: \"1:135498032188:web:88106717a56fe17b\"\r\n};\r\n\r\nif (hostName === \"url-prod\") {\r\n    getVersion = 0.1;\r\n    getServer = \"server-prod\";\r\n    firebase.initializeApp(productionConfig);\r\n} else {\r\n    getVersion = 0.1;\r\n    getServer = \"server-dev\";\r\n    firebase.initializeApp(devConfig);\r\n}\r\n\r\nlet pageLoaded = false;\r\n\r\nfirebase.firestore()\r\n    .collection(\"versions\")\r\n    .onSnapshot(() => {\r\n        pageLoaded && document.location.reload(true);\r\n        pageLoaded = true;\r\n    });\r\n\r\n\r\nconst firestore = firebase.firestore();\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nconst server = getServer;\r\nconst version = getVersion;\r\n\r\nexport {\r\n    server,\r\n    storage,\r\n    firestore,\r\n    auth,\r\n    version,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Avatar, Divider, message, Spin, Upload } from \"antd\";\r\nimport { storage } from \"../../firebase/config\";\r\nimport { isEmpty } from \"lodash\";\r\nimport resizeImage from \"resize-image\";\r\n\r\nexport default class UploadImage extends Component {\r\n    state = {\r\n        imagen: this.props.imagen,\r\n        loading: false,\r\n    };\r\n\r\n    beforeUploadImage = () => {\r\n        if (!this.props.titulo || !this.props.subtitulo || !this.props.contenido) {\r\n            message.warning(\"Porfavor completa los campos\");\r\n        }\r\n    };\r\n\r\n    uploadImageProfile = (documentFile) => {\r\n        this.setState({ loading: true });\r\n        console.log(this.validateExtension(documentFile));\r\n        if (this.validateExtension(documentFile)) {\r\n            this.convertImageToBase64(documentFile);\r\n        } else {\r\n            message.error(\"You can only upload images\");\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    validateExtension = (document) => {\r\n        return (/\\.(gif|jpg|jpeg|tiff|png)$/i).test(document.name);\r\n    };\r\n\r\n    convertImageToBase64 = (documentFile) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (upload) => {\r\n            let dataUrl = upload.target.result;\r\n            let image = new Image();\r\n            image.src = dataUrl;\r\n            image.onload = () => {\r\n                const ImgBase64 = resizeImage.resize(image, 720, 720, resizeImage.JPEG);\r\n                this.uploadToStorageAndGetURL(documentFile, ImgBase64);\r\n            };\r\n        };\r\n        reader.readAsDataURL(documentFile);\r\n    };\r\n\r\n    uploadToStorageAndGetURL = (documentFile, ImgBase64) => {\r\n        const folder = this.props.titulo;\r\n        const name = \"imagen\";\r\n        const path = `${\"news/\" + folder}`;\r\n        const uploadTask = ImgBase64 ?\r\n            storage.ref(`${path + \"/\" + name}`).putString(ImgBase64, 'data_url')\r\n            : storage.ref(`${path + \"/\" + name}`).put(documentFile);\r\n\r\n        !isEmpty(uploadTask) ? uploadTask.on('state_changed',\r\n            () => {\r\n                storage.ref(`${path}`).child(name).getDownloadURL().then(\r\n                    url => {\r\n                        this.props.onChange(url);\r\n                        console.log(url);\r\n                    }).then(\r\n                        () => {\r\n                            this.setState({ loading: false });\r\n                        });\r\n            }) : console.log(\"error\");\r\n    };\r\n\r\n    render() {\r\n        const { imagen } = this.props;\r\n\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Spin\r\n                    spinning={this.state.loading}\r\n                    size=\"large\"\r\n                    tip=\"Loading...\">\r\n                    <Upload\r\n                        action={this.uploadImageProfile}\r\n                        showUploadList={false}\r\n                        listType=\"picture-card\"\r\n                        className=\"avatar-uploader\"\r\n                        disabled={!this.props.titulo || !this.props.subtitulo || !this.props.contenido}\r\n                    >\r\n                        <Avatar\r\n                            onClick={() => this.beforeUploadImage()}\r\n                            size={100}\r\n                            icon=\"user\"\r\n                            src={imagen} />\r\n                    </Upload>\r\n                </Spin>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }\r\n}","export const SendPushNotification = (somePushTokens, title, body) => {\r\n    console.log(somePushTokens)\r\n    somePushTokens.map((data) => {\r\n        return data.expoToken ? fetch('https://exp.host/--/api/v2/push/send', {\r\n            body: JSON.stringify({\r\n                to: data.expoToken,\r\n                title: title,\r\n                body: body,\r\n                sound: \"default\",\r\n                data: { message: `${title} - ${body}` }\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            mode: \"no-cors\",\r\n            sound: true\r\n        }) : null;\r\n    });\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\nimport UploadImage from \"./components/uploadImage/Upload\";\r\nimport { SendPushNotification } from \"./utils/sendPushNotification\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    titulo: \"\",\r\n    subtitulo: \"\",\r\n    contenido: \"\",\r\n    imagen: \"\",\r\n    usersTokens: []\r\n  }\r\n\r\n  onChangeText(name, value) {\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  fetchCreateNews = async () => {\r\n\r\n    const { titulo, subtitulo, contenido, imagen } = this.state;\r\n\r\n    await fetch('http://35.236.27.209/movilPeru/api/controller/create_news.php', {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        titulo: titulo,\r\n        subtitulo: subtitulo,\r\n        contenido: contenido,\r\n        imagen: imagen\r\n      })\r\n    }).then(response => { return response.json() })\r\n      .then(data => {\r\n        message.warning(data.message);\r\n      }).then(() => {\r\n        this.fetchGetTokens();\r\n      });\r\n\r\n  }\r\n\r\n  fetchGetTokens = async () => {\r\n    await fetch('http://35.236.27.209/movilPeru/api/controller/get_tokens.php', {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(response => { return response.json() })\r\n      .then(data => {\r\n        this.setState({ usersTokens: data.tokens });\r\n      }).then(() => { this.sendPushNotifications() })\r\n  }\r\n\r\n  sendPushNotifications = async () => {\r\n    const { usersTokens, titulo, subtitulo } = this.state;\r\n    SendPushNotification(usersTokens, titulo, subtitulo);\r\n    this.setState({\r\n      titulo: \"\",\r\n      subtitulo: \"\",\r\n      contenido: \"\",\r\n      imagen: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { titulo, subtitulo, contenido, imagen } = this.state;\r\n\r\n    return (\r\n      <div className=\"formP\">\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<Icon type=\"file-text\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Titulo\"\r\n              value={titulo}\r\n              onChange={(e) => { this.onChangeText(\"titulo\", e.target.value) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<Icon type=\"file-text\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Subtitulo\"\r\n              value={subtitulo}\r\n              onChange={(e) => { this.onChangeText(\"subtitulo\", e.target.value) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <TextArea\r\n              placeholder=\"Contenido\"\r\n              rows={5}\r\n              value={contenido}\r\n              onChange={(e) => { this.onChangeText(\"contenido\", e.target.value) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <UploadImage\r\n              type={\"documents\"}\r\n              imagen={imagen}\r\n              titulo={titulo}\r\n              subtitulo={subtitulo}\r\n              contenido={contenido}\r\n              onChange={(imagen) => { this.setState({ imagen: imagen }); }}\r\n            />\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={() => { this.fetchCreateNews() }}>\r\n              Crear Noticia\r\n          </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrappedLogin = Form.create()(App)\r\nexport default WrappedLogin;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}